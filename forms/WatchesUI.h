// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef WatchesUI_h
#define WatchesUI_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include "Fl_WatchTable.h"
extern void cb_WatchTable(Fl_WatchTable*, void*);
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
extern void cb_WatchUpdate(Fl_Button*, void*);

class WatchesUI : public Fl_Double_Window {
  void _WatchesUI();
public:
  WatchesUI(int X, int Y, int W, int H, const char *L = 0);
  WatchesUI(int W, int H, const char *L = 0);
  WatchesUI();
  Fl_WatchTable *watchTable;
  Fl_Button *updateButton;
};
#include <FL/Fl_Input.H>
#include <FL/Fl_Check_Button.H>
extern void cb_BreakClear(Fl_Button*, void*);
#include <FL/Fl_Return_Button.H>
extern void cb_BreakSet(Fl_Return_Button*, void*);
extern void cb_BreakCancel(Fl_Button*, void*);

class DataBreakUI : public Fl_Double_Window {
  void _DataBreakUI();
public:
  DataBreakUI(int X, int Y, int W, int H, const char *L = 0);
  DataBreakUI(int W, int H, const char *L = 0);
  DataBreakUI();
  Fl_Input *breakAddrInput;
  Fl_Input *breakMaskInput;
  Fl_Check_Button *readToggle;
  Fl_Check_Button *writeToggle;
};
#include <FL/Fl_Choice.H>
extern void cb_WatchOkay(Fl_Return_Button*, void*);
extern void cb_WatchCancel(Fl_Button*, void*);

class SetWatchUI : public Fl_Double_Window {
  void _SetWatchUI();
public:
  SetWatchUI(int X, int Y, int W, int H, const char *L = 0);
  SetWatchUI(int W, int H, const char *L = 0);
  SetWatchUI();
  Fl_Input *addrInput;
  Fl_Choice *typeChoice;
  static Fl_Menu_Item menu_typeChoice[];
  Fl_Check_Button *unsignedCheck;
  Fl_Check_Button *hexCheck;
};
#endif
