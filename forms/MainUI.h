// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef MainUI_h
#define MainUI_h
#include <FL/Fl.H>
#include "Main_Window.h"
#include <FL/Fl_Menu_Bar.H>
extern void cb_NewProject(Fl_Menu_*, void*);
extern void cb_OpenProject(Fl_Menu_*, void*);
extern void cb_SaveProject(Fl_Menu_*, void*);
extern void cb_SaveProjectAs(Fl_Menu_*, void*);
extern void cb_ReloadProject(Fl_Menu_*, void*);
extern void cb_SelectExec(Fl_Menu_*, void*);
extern void cb_Exit(Fl_Menu_*, void*);
extern void cb_GotoAddress(Fl_Menu_*, void*);
extern void cb_DumpMemory(Fl_Menu_*, void*);
extern void cb_ContinueM(Fl_Menu_*, void*);
extern void cb_StepOverM(Fl_Menu_*, void*);
extern void cb_StepM(Fl_Menu_*, void*);
extern void cb_PatchOpcode(Fl_Menu_*, void*);
extern void cb_DebugSettings(Fl_Menu_*, void*);
extern void cb_AutoUpdate(Fl_Menu_*, void*);
extern void cb_SymbolsToggle(Fl_Menu_*, void*);
extern void cb_MessageWindow(Fl_Menu_*, void*);
extern void cb_SourceCode(Fl_Menu_*, void*);
extern void cb_Symbols(Fl_Menu_*, void*);
extern void cb_Bookmarks(Fl_Menu_*, void*);
extern void cb_MemoryView(Fl_Menu_*, void*);
extern void cb_WatchView(Fl_Menu_*, void*);
extern void cb_About(Fl_Menu_*, void*);
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
extern void cb_Pause(Fl_Button*, void*);
extern void cb_Step(Fl_Button*, void*);
extern void cb_StepOver(Fl_Button*, void*);
extern void cb_Continue(Fl_Button*, void*);
extern void cb_StepOut(Fl_Button*, void*);
extern void cb_Upload(Fl_Button*, void*);
extern void cb_Reboot(Fl_Button*, void*);
extern void cb_commConnect(Fl_Button*, void*);
extern void cb_commDisconnect(Fl_Button*, void*);
#include <FL/Fl_Tile.H>
#include "Fl_RegView.h"
extern void cb_RefreshRegs(Fl_Button*, void*);
#include <FL/Fl_Light_Button.H>
extern void cb_DataView(Fl_Light_Button*, long);
extern void cb_RefreshCode(Fl_Button*, void*);
#include "Fl_Disassembler.h"
extern void cb_Disassembly(Fl_Disassembler*, void*);
#include "Fl_Status_Bar.h"

class MainUI : public Main_Window {
  void _MainUI();
public:
  MainUI(int X, int Y, int W, int H, const char *L = 0);
  MainUI(int W, int H, const char *L = 0);
  MainUI();
  static Fl_Menu_Item menu_[];
  static Fl_Menu_Item *updateToggle;
  static Fl_Menu_Item *symbolsToggle;
  Fl_Group *execControls;
  Fl_Button *stopButton;
  Fl_Button *stepButton;
  Fl_Button *stepOverButton;
  Fl_Button *runButton;
  Fl_Button *stepOutButton;
  Fl_Button *uploadButton;
  Fl_Button *rebootButton;
  Fl_Button *connectButton;
  Fl_Button *disconnectButton;
  Fl_Group *dummy;
  Fl_RegView *registers;
  Fl_Button *regRefresh;
  Fl_Light_Button *localMode;
  Fl_Light_Button *remoteMode;
  Fl_Button *codeRefresh;
  Fl_Disassembler *disasm;
  Fl_Status_Bar *statusBar;
};
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Progress.H>
#include <FL/Fl_Box.H>

class ProgressUI : public Fl_Double_Window {
  void _ProgressUI();
public:
  ProgressUI(int X, int Y, int W, int H, const char *L = 0);
  ProgressUI(int W, int H, const char *L = 0);
  ProgressUI();
  Fl_Progress *progressBar;
  Fl_Box *progressText;
  Fl_Button *cancelButton;
};
#include <FL/Fl_Input.H>
#include <FL/Fl_Return_Button.H>
extern void cb_AddressOk(Fl_Return_Button*, void*);
extern void cb_AddressCancel(Fl_Button*, void*);

class AddressUI : public Fl_Double_Window {
  void _AddressUI();
public:
  AddressUI(int X, int Y, int W, int H, const char *L = 0);
  AddressUI(int W, int H, const char *L = 0);
  AddressUI();
  Fl_Input *addressInput;
  Fl_Box *promptLabel;
};
extern void cb_OpcodeInput(Fl_Input*, void*);
extern void cb_OpcodeWrite(Fl_Return_Button*, void*);
extern void cb_OpcodeCancel(Fl_Button*, void*);
#include <FL/Fl_Output.H>

class OpcodeUI : public Fl_Double_Window {
  void _OpcodeUI();
public:
  OpcodeUI(int X, int Y, int W, int H, const char *L = 0);
  OpcodeUI(int W, int H, const char *L = 0);
  OpcodeUI();
  Fl_Input *opcodeInput;
  Fl_Output *opcode;
};
#endif
