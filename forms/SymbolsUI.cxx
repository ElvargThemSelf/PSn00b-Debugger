// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "SymbolsUI.h"
SymbolsUI::SymbolsUI(int X, int Y, int W, int H, const char *L)
  : Fl_Double_Window(X, Y, W, H, L) {
  _SymbolsUI();
}

SymbolsUI::SymbolsUI(int W, int H, const char *L)
  : Fl_Double_Window(0, 0, W, H, L) {
  clear_flag(16);
  _SymbolsUI();
}

SymbolsUI::SymbolsUI()
  : Fl_Double_Window(0, 0, 400, 500, "Symbols") {
  clear_flag(16);
  _SymbolsUI();
}

void SymbolsUI::_SymbolsUI() {
this->box(FL_FLAT_BOX);
this->color(FL_BACKGROUND_COLOR);
this->selection_color(FL_BACKGROUND_COLOR);
this->labeltype(FL_NO_LABEL);
this->labelfont(0);
this->labelsize(14);
this->labelcolor(FL_FOREGROUND_COLOR);
this->align(Fl_Align(FL_ALIGN_TOP));
this->when(FL_WHEN_RELEASE);
{ symbolsTable = new Fl_Symbol_Table(0, 0, 400, 500);
  symbolsTable->box(FL_THIN_DOWN_FRAME);
  symbolsTable->color(FL_BACKGROUND_COLOR);
  symbolsTable->selection_color(FL_SELECTION_COLOR);
  symbolsTable->labeltype(FL_NORMAL_LABEL);
  symbolsTable->labelfont(0);
  symbolsTable->labelsize(12);
  symbolsTable->labelcolor(FL_FOREGROUND_COLOR);
  symbolsTable->callback((Fl_Callback*)cb_SymbolsTable);
  symbolsTable->align(Fl_Align(FL_ALIGN_TOP_LEFT));
  symbolsTable->when(FL_WHEN_RELEASE);
  symbolsTable->end();
  Fl_Group::current()->resizable(symbolsTable);
} // Fl_Symbol_Table* symbolsTable
xclass("psdebug.symbols");
end();
}
