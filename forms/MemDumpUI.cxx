// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "MemDumpUI.h"
MemDumpUI::MemDumpUI(int X, int Y, int W, int H, const char *L)
  : Fl_Double_Window(X, Y, W, H, L) {
  _MemDumpUI();
}

MemDumpUI::MemDumpUI(int W, int H, const char *L)
  : Fl_Double_Window(0, 0, W, H, L) {
  clear_flag(16);
  _MemDumpUI();
}

MemDumpUI::MemDumpUI()
  : Fl_Double_Window(0, 0, 265, 145, "Memory Dumper") {
  clear_flag(16);
  _MemDumpUI();
}

void MemDumpUI::_MemDumpUI() {
this->box(FL_FLAT_BOX);
this->color(FL_BACKGROUND_COLOR);
this->selection_color(FL_BACKGROUND_COLOR);
this->labeltype(FL_NO_LABEL);
this->labelfont(0);
this->labelsize(12);
this->labelcolor(FL_FOREGROUND_COLOR);
this->align(Fl_Align(FL_ALIGN_TOP));
this->when(FL_WHEN_RELEASE);
{ Fl_Group* o = new Fl_Group(10, 10, 245, 95);
  o->box(FL_THIN_UP_BOX);
  { dumpAddress = new Fl_Input(115, 24, 130, 21, "Address (in hex)");
    dumpAddress->labelsize(12);
    dumpAddress->textsize(12);
    dumpAddress->window()->hotspot(dumpAddress);
  } // Fl_Input* dumpAddress
  { dumpLength = new Fl_Input(115, 50, 130, 21, "Length (in bytes)");
    dumpLength->labelsize(12);
    dumpLength->textsize(12);
  } // Fl_Input* dumpLength
  { noAddrCheck = new Fl_Check_Button(20, 80, 225, 15, "Ignore address check");
    noAddrCheck->down_box(FL_DOWN_BOX);
    noAddrCheck->labelsize(12);
  } // Fl_Check_Button* noAddrCheck
  o->end();
} // Fl_Group* o
{ Fl_Button* o = new Fl_Button(185, 115, 70, 20, "Close");
  o->labelsize(12);
  o->callback((Fl_Callback*)cb_MemDumpClose);
} // Fl_Button* o
{ Fl_Return_Button* o = new Fl_Return_Button(105, 115, 70, 20, "Dump");
  o->labelsize(12);
  o->callback((Fl_Callback*)cb_MemDumpGo);
} // Fl_Return_Button* o
set_modal();
xclass("psdebug.dump");
end();
}
