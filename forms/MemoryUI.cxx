// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "MemoryUI.h"
MemoryUI::MemoryUI(int X, int Y, int W, int H, const char *L)
  : Fl_Double_Window(X, Y, W, H, L) {
  _MemoryUI();
}

MemoryUI::MemoryUI(int W, int H, const char *L)
  : Fl_Double_Window(0, 0, W, H, L) {
  clear_flag(16);
  _MemoryUI();
}

MemoryUI::MemoryUI()
  : Fl_Double_Window(0, 0, 400, 400, "Memory") {
  clear_flag(16);
  _MemoryUI();
}

void MemoryUI::_MemoryUI() {
this->box(FL_FLAT_BOX);
this->color(FL_BACKGROUND_COLOR);
this->selection_color(FL_BACKGROUND_COLOR);
this->labeltype(FL_NO_LABEL);
this->labelfont(0);
this->labelsize(14);
this->labelcolor(FL_FOREGROUND_COLOR);
this->align(Fl_Align(FL_ALIGN_TOP));
this->when(FL_WHEN_RELEASE);
{ Fl_Group* o = new Fl_Group(5, 5, 390, 15);
  { Fl_Button* o = new Fl_Button(345, 5, 50, 15, "Refresh");
    o->labelsize(10);
    o->callback((Fl_Callback*)cb_MemoryRefresh);
  } // Fl_Button* o
  { Fl_Group* o = new Fl_Group(145, 5, 195, 15);
    o->end();
    Fl_Group::current()->resizable(o);
  } // Fl_Group* o
  { Fl_Light_Button* o = new Fl_Light_Button(5, 5, 45, 15, "Int");
    o->type(102);
    o->value(1);
    o->labelsize(10);
    o->callback((Fl_Callback*)cb_MemoryMode, (void*)(0));
  } // Fl_Light_Button* o
  { Fl_Light_Button* o = new Fl_Light_Button(50, 5, 45, 15, "Short");
    o->type(102);
    o->labelsize(10);
    o->callback((Fl_Callback*)cb_MemoryMode, (void*)(1));
  } // Fl_Light_Button* o
  { Fl_Light_Button* o = new Fl_Light_Button(95, 5, 45, 15, "Byte");
    o->type(102);
    o->labelsize(10);
    o->callback((Fl_Callback*)cb_MemoryMode, (void*)(2));
  } // Fl_Light_Button* o
  o->end();
} // Fl_Group* o
{ memory = new Fl_MemoryView(5, 20, 390, 375);
  memory->box(FL_DOWN_BOX);
  memory->color((Fl_Color)55);
  memory->selection_color(FL_BACKGROUND_COLOR);
  memory->labeltype(FL_NORMAL_LABEL);
  memory->labelfont(0);
  memory->labelsize(12);
  memory->labelcolor(FL_FOREGROUND_COLOR);
  memory->callback((Fl_Callback*)cb_Memory);
  memory->align(Fl_Align(FL_ALIGN_TOP_LEFT));
  memory->when(FL_WHEN_RELEASE);
  memory->end();
  Fl_Group::current()->resizable(memory);
} // Fl_MemoryView* memory
xclass("psdebug.memory");
end();
}
